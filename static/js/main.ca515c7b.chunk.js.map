{"version":3,"sources":["components/Header/Header.style.ts","assets/images/rick_and_morty_logo.svg","components/Header/Header.tsx","components/ProfileDetail/ProfileDetail.tsx","styles/media-queries.ts","App.style.ts","contexts/ProfileContext.ts","components/ProfileDetail/ProfileDetail.style.ts","styles/colors.ts","components/ProfileCard/ProfileCard.style.ts","components/ProfileCard/ProfileCard.tsx","components/ProfileList/ProfileList.style.ts","components/ProfileList/ProfileList.tsx","hooks/useVisibility.tsx","components/ErrorFallback/ErrorFallback.tsx","App.tsx","index.tsx"],"names":["Nav","styled","header","display","justifyContent","backgroundColor","borderBlockEnd","padding","position","top","zIndex","boxShadow","Header","src","RickAndMortyLogo","width","alt","PlaceType","small","Layout","div","mediaQueries","flexDirection","height","Body","main","overflow","LoaderContainer","alignItems","margin","ProfileContext","React","Panel","Collapse","PanelStyled","marginBottom","fontFamily","fontSize","ProfileDetail","props","origin","setOrigin","location","setLocation","chapterNameList","setChapterNameList","setPlace","placeUrl","placeType","fetch","then","response","json","data","ORIGIN","LOCATION","originPlaceUrl","profile","url","locationPlaceUrl","episodeUrlList","episode","forEach","episodeUrl","push","name","length","setChapters","renderPlaceInfo","place","type","dimension","residents","bordered","defaultActiveKey","expandIcon","isActive","CaretRightOutlined","rotate","status","species","gender","sort","map","chapterName","index","role","style","CardContainer","minHeight","minWidth","gap","cursor","transition","ImageContainer","inlineSize","InfoContainer","H3","h3","fontWeight","H4","h4","fontStyle","whiteSpace","textOverflow","Info","ProfileCard","ref","isModalVisible","setIsModalVisible","onClick","css","border","borderRadius","image","bodyStyle","title","visible","onCancel","footer","ProfileListContainer","flexWrap","ProfileList","profileList","item","id","lastProfileCard","useVisibility","cb","deps","intersectionObserver","useRef","useCallback","node","current","disconnect","IntersectionObserver","entry","isIntersecting","observe","ErrorFallback","subTitle","App","setProfileList","profileApiInfo","setProfileApiInfo","loading","setLoading","offset","setOffset","next","newProfileList","concat","results","info","Provider","value","FallbackComponent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca515c7b.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nconst Nav = styled.header({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  backgroundColor: \"rgb(203,203,203)\",\r\n  borderBlockEnd: \"1px solid gray\",\r\n  padding: \"1rem\",\r\n  position: \"sticky\",\r\n  top: \"0\",\r\n  zIndex: 1,\r\n  boxShadow:\r\n    \"rgba(0, 0, 0, 0.07) 0px 0px 0px, rgba(0, 0, 0, 0.07) 0px 1px 1px, rgba(0, 0, 0, 0.07) 0px 4px 4px, rgba(0, 0, 0, 0.07) 0px 5px 5px, rgba(0, 0, 0, 0.07) 0px 10px 11px\",\r\n});\r\n\r\nexport { Nav };\r\n","export default __webpack_public_path__ + \"static/media/rick_and_morty_logo.20259291.svg\";","import { Nav } from \"./Header.style\";\r\nimport RickAndMortyLogo from \"../../assets/images/rick_and_morty_logo.svg\";\r\n\r\nexport default function Header(): JSX.Element {\r\n  return (\r\n    <Nav>\r\n      <img src={RickAndMortyLogo} width={200} alt=\"rick and morty\" />\r\n    </Nav>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { Place, ProfileModel } from \"../../utils/models\";\r\nimport { Collapse } from \"antd\";\r\nimport { CaretRightOutlined } from \"@ant-design/icons\";\r\nimport { PanelStyled } from \"./ProfileDetail.style\";\r\n\r\ninterface ProfileDetailProps {\r\n  profile: ProfileModel;\r\n}\r\n\r\nenum PlaceType {\r\n  ORIGIN = \"origin\",\r\n  LOCATION = \"location\",\r\n}\r\n\r\nexport default function ProfileDetail(props: ProfileDetailProps): JSX.Element {\r\n  const [origin, setOrigin] = React.useState<Place>({} as Place);\r\n  const [location, setLocation] = React.useState<Place>({} as Place);\r\n  const [chapterNameList, setChapterNameList] = React.useState<string[]>([]);\r\n\r\n  React.useEffect(() => {\r\n    const setPlace = (placeUrl: string, placeType: PlaceType) => {\r\n      fetch(placeUrl)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (placeType === PlaceType.ORIGIN) {\r\n            setOrigin(data);\r\n          } else if (placeType === PlaceType.LOCATION) {\r\n            setLocation(data);\r\n          }\r\n        });\r\n    };\r\n    const originPlaceUrl = props.profile.origin.url;\r\n    const locationPlaceUrl = props.profile.location.url;\r\n    setPlace(originPlaceUrl, PlaceType.ORIGIN);\r\n    setPlace(locationPlaceUrl, PlaceType.LOCATION);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const chapterNameList: string[] = [];\r\n    const episodeUrlList = props.profile.episode;\r\n    const setChapters = (episodeUrl: string) => {\r\n      fetch(episodeUrl)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          chapterNameList.push(data.name);\r\n        })\r\n        .then(() => {\r\n          if (chapterNameList.length === episodeUrlList.length) {\r\n            setChapterNameList(chapterNameList);\r\n          }\r\n        });\r\n    };\r\n    episodeUrlList.forEach((episodeUrl) => {\r\n      setChapters(episodeUrl);\r\n    });\r\n  }, []);\r\n\r\n  const renderCharacterInfo = (profile: ProfileModel): JSX.Element => {\r\n    return (\r\n      <ul>\r\n        <li>Name: {profile.name}</li>\r\n        <li>Status: {profile.status}</li>\r\n        <li>Species: {profile.species}</li>\r\n        <li>Type: {profile.type}</li>\r\n        <li>Gender: {profile.gender}</li>\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  const renderPlaceInfo = (place: Place): JSX.Element => {\r\n    return (\r\n      <ul>\r\n        <li>Name: {place.name}</li>\r\n        <li>Type: {place.type}</li>\r\n        <li>Dimension: {place.dimension}</li>\r\n        <li>\r\n          Amount of Residents: {place.residents && place.residents.length}\r\n        </li>\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Collapse\r\n      bordered={false}\r\n      defaultActiveKey={[]}\r\n      expandIcon={({ isActive }) => (\r\n        <CaretRightOutlined rotate={isActive ? 90 : 0} />\r\n      )}\r\n    >\r\n      <PanelStyled header=\"Character's Information\" key=\"1\">\r\n        {renderCharacterInfo(props.profile)}\r\n      </PanelStyled>\r\n      <PanelStyled header=\"Origin and Location\" key=\"2\">\r\n        <h4>Origin</h4>\r\n        {renderPlaceInfo(origin)}\r\n        <h3>Location</h3>\r\n        {renderPlaceInfo(location)}\r\n      </PanelStyled>\r\n      <PanelStyled header=\"Chapters\" key=\"3\">\r\n        {chapterNameList.sort().map((chapterName, index) => {\r\n          return (\r\n            <ul role={\"listitem\"} key={index} style={{ marginBottom: \"0px\" }}>\r\n              <li>{chapterName}</li>\r\n            </ul>\r\n          );\r\n        })}\r\n      </PanelStyled>\r\n    </Collapse>\r\n  );\r\n}\r\n","export const large = \"@media (min-width: 1200px)\";\r\nexport const medium = \"@media (min-width: 769px) and (max-width: 1199px)\";\r\nexport const small = \"@media (max-width: 768px)\";\r\nexport const mobile = \"@media (max-width: 375px)\";\r\n","import styled from \"@emotion/styled\";\r\nimport * as mediaQueries from \"./styles/media-queries\";\r\n\r\nconst Layout = styled.div({\r\n  [mediaQueries.small]: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"99vh\",\r\n  },\r\n});\r\n\r\nconst Body = styled.main({\r\n  display: \"flex\",\r\n  padding: \"2rem\",\r\n  overflow: \"auto\",\r\n  [mediaQueries.small]: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n});\r\n\r\nconst LoaderContainer = styled.div({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  height: \"20vh\",\r\n  margin: \"2rem\",\r\n  zIndex: 1,\r\n});\r\n\r\nexport { Layout, Body, LoaderContainer };\r\n","import * as React from \"react\";\r\nimport { ProfileModel } from \"../utils/models\";\r\n\r\nexport const ProfileContext = React.createContext([] as ProfileModel[]);\r\n","import styled from \"@emotion/styled\";\r\nimport { Collapse } from \"antd\";\r\nconst { Panel } = Collapse;\r\n\r\nconst PanelStyled = styled(Panel)({\r\n  boxShadow: \"rgba(0, 0, 0, 0.35) 0px 3px 7px\",\r\n  marginBottom: \"2rem\",\r\n  fontFamily: \"Tahoma\",\r\n  fontSize: \"14px\",\r\n});\r\n\r\nexport { PanelStyled };\r\n","const white = \"white\";\r\nconst black = \"black\";\r\nconst text = \"#434449\";\r\nconst gray = \"#f1f2f7\";\r\nconst gray5 = \"#f1f2f7\";\r\nconst gray10 = \"#f1f1f4\";\r\nconst gray20 = \"#e4e5e9\";\r\nconst darkgray = \"#221E21\";\r\nconst indigo = \"#3f51b5\";\r\nconst indigoDarken10 = \"#364495\";\r\nconst indigoLighten80 = \"#b7c1f8\";\r\nconst yellow = \"yellow\";\r\nconst green = \"#4caf50\";\r\nconst danger = \"#ef5350\";\r\nconst orange = \"orange\";\r\nconst beige = \"#AD9A77\";\r\nconst transparent = \"transparent\";\r\nconst blue = \"dodgerblue\";\r\nconst lightBlue = \"deepskyblue\";\r\nconst red = \"red\";\r\n\r\nexport {\r\n  red,\r\n  green,\r\n  white,\r\n  black,\r\n  lightBlue,\r\n  blue,\r\n  transparent,\r\n  orange,\r\n  beige,\r\n  danger,\r\n  text,\r\n  gray,\r\n  gray5,\r\n  gray10,\r\n  gray20,\r\n  darkgray,\r\n  indigo,\r\n  indigoDarken10,\r\n  indigoLighten80,\r\n  yellow,\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport * as mediaQueries from \"../../styles/media-queries\";\r\nimport * as colors from \"../../styles/colors\";\r\n\r\nconst CardContainer = styled.div({\r\n  display: \"flex\",\r\n  minHeight: \"10vh\",\r\n  minWidth: \"20rem\",\r\n  gap: \"0.5rem\",\r\n  boxShadow: \"rgba(0, 0, 0, 0.35) 0px 3px 7px\",\r\n  \":hover\": {\r\n    cursor: \"pointer\",\r\n    boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\r\n    transition: \"0.3s\",\r\n    backgroundColor: colors.gray5,\r\n  },\r\n  [mediaQueries.small]: {\r\n    minWidth: \"10rem\",\r\n  },\r\n});\r\n\r\nconst ImageContainer = styled.div({\r\n  display: \"flex\",\r\n  inlineSize: \"10rem\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  [mediaQueries.small]: {\r\n    display: \"flex\",\r\n    inlineSize: \"35vw\",\r\n  },\r\n});\r\n\r\nconst InfoContainer = styled.div({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  minHeight: \"10rem\",\r\n  minWidth: \"10rem\",\r\n  overflow: \"auto\",\r\n  inlineSize: \"10rem\",\r\n  [mediaQueries.small]: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    inlineSize: \"45vw\",\r\n  },\r\n});\r\n\r\nconst H3 = styled.h3({\r\n  fontFamily: \"Helvetica\",\r\n  fontSize: \"16px\",\r\n  fontWeight: \"bold\",\r\n});\r\n\r\nconst H4 = styled.h4({\r\n  fontFamily: \"Helvetica\",\r\n  fontSize: \"14px\",\r\n  fontStyle: \"italic\",\r\n\r\n  width: \"150px\",\r\n  whiteSpace: \"nowrap\",\r\n  overflow: \"hidden\",\r\n  textOverflow: \"ellipsis\",\r\n});\r\n\r\nconst Info = styled.div({\r\n  display: \"flex\",\r\n  gap: \"0.5rem\",\r\n  alignItems: \"center\",\r\n  minHeight: \"3vh\",\r\n});\r\n\r\nexport { CardContainer, ImageContainer, InfoContainer, H3, H4, Info };\r\n","/** @jsxImportSource @emotion/react */\r\nimport * as React from \"react\";\r\nimport { ProfileModel } from \"../../utils/models\";\r\nimport { Modal } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport ProfileDetail from \"../../components/ProfileDetail/ProfileDetail\";\r\nimport {\r\n  CardContainer,\r\n  ImageContainer,\r\n  InfoContainer,\r\n  H3,\r\n  H4,\r\n  Info,\r\n} from \"./ProfileCard.style\";\r\n\r\ninterface ProfileCardProps {\r\n  profile: ProfileModel;\r\n  ref?: React.Ref<HTMLDivElement>;\r\n}\r\n\r\nconst ProfileCard: React.ForwardRefExoticComponent<ProfileCardProps> =\r\n  React.forwardRef(\r\n    (props: ProfileCardProps, ref: React.Ref<HTMLDivElement>) => {\r\n      const [isModalVisible, setIsModalVisible] = React.useState(false);\r\n      const onCardClick = (): void => setIsModalVisible(!isModalVisible);\r\n      const onModalCancel = (): void => setIsModalVisible(false);\r\n\r\n      return (\r\n        <div ref={ref}>\r\n          <CardContainer onClick={onCardClick}>\r\n            <ImageContainer>\r\n              <img\r\n                css={[\r\n                  {\r\n                    border: \"1px solid black\",\r\n                    borderRadius: \"5rem\",\r\n                  },\r\n                ]}\r\n                src={props.profile.image}\r\n                width={110}\r\n                height={110}\r\n                alt={props.profile.name}\r\n              />\r\n            </ImageContainer>\r\n            <InfoContainer>\r\n              <Info>\r\n                <H3>Name:</H3>\r\n                <H4>{props.profile.name}</H4>\r\n              </Info>\r\n              <Info>\r\n                <H3>Status:</H3>\r\n                <H4>{props.profile.status}</H4>\r\n              </Info>\r\n              <Info>\r\n                <H3>Species:</H3>\r\n                <H4>{props.profile.species}</H4>\r\n              </Info>\r\n              <Info>\r\n                <H3>Gender:</H3>\r\n                <H4>{props.profile.gender}</H4>\r\n              </Info>\r\n            </InfoContainer>\r\n          </CardContainer>\r\n          <Modal\r\n            bodyStyle={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              gap: \"1rem\",\r\n              alignItems: \"center\",\r\n              height: 530,\r\n              overflow: \"auto\",\r\n            }}\r\n            title={\"\"}\r\n            visible={isModalVisible}\r\n            onCancel={onModalCancel}\r\n            footer={[]}\r\n          >\r\n            <img\r\n              css={{\r\n                borderRadius: \"5rem\",\r\n              }}\r\n              src={props.profile.image}\r\n              alt={props.profile.name}\r\n              title={props.profile.name}\r\n              width={80}\r\n            />\r\n            <ProfileDetail profile={props.profile} />\r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n  );\r\n\r\nexport default ProfileCard;\r\n","import styled from \"@emotion/styled\";\r\nimport * as mediaQueries from \"../../styles/media-queries\";\r\n\r\nconst ProfileListContainer = styled.div({\r\n  display: \"flex\",\r\n  gap: \"2rem\",\r\n  flexWrap: \"wrap\",\r\n  justifyContent: \"center\",\r\n  [mediaQueries.small]: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"2rem\",\r\n  },\r\n});\r\n\r\nexport { ProfileListContainer };\r\n","import * as React from \"react\";\r\nimport { ProfileContext } from \"../../contexts/ProfileContext\";\r\nimport ProfileCard from \"../ProfileCard/ProfileCard\";\r\nimport { ProfileModel } from \"../../utils/models\";\r\nimport { ProfileListContainer } from \"./ProfileList.style\";\r\n\r\ninterface ProfileListProps {\r\n  lastProfileCard?: React.Ref<HTMLDivElement>;\r\n}\r\n\r\nexport default function ProfileList(props: ProfileListProps): JSX.Element {\r\n  const profileList = React.useContext(ProfileContext);\r\n  return (\r\n    <ProfileListContainer>\r\n      {profileList.map((item: ProfileModel) => {\r\n        return (\r\n          <div role={\"listitem\"} key={item.id}>\r\n            <ProfileCard\r\n              profile={item}\r\n              ref={\r\n                profileList[profileList.length - 1].id === item.id\r\n                  ? props.lastProfileCard\r\n                  : null\r\n              }\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </ProfileListContainer>\r\n  );\r\n}\r\n","import { useCallback, useRef } from \"react\";\r\n\r\nfunction useVisibility(\r\n  cb: (isVisible: boolean) => void,\r\n  deps: React.DependencyList\r\n): (node: unknown) => void {\r\n  const intersectionObserver = useRef<IntersectionObserver | null>(null);\r\n  const memoizeCallback = useCallback((node) => {\r\n    if (intersectionObserver.current) {\r\n      intersectionObserver.current.disconnect();\r\n    }\r\n    intersectionObserver.current = new IntersectionObserver(([entry]) => {\r\n      cb(entry.isIntersecting);\r\n    });\r\n    if (node) intersectionObserver.current.observe(node);\r\n  }, deps);\r\n  return memoizeCallback;\r\n}\r\n\r\nexport default useVisibility;\r\n","import { Result } from \"antd\";\r\n\r\nexport default function ErrorFallback(): JSX.Element {\r\n  return (\r\n    <Result status=\"500\" title=\"500\" subTitle=\"Sorry, something went wrong.\" />\r\n  );\r\n}\r\n","import * as React from \"react\";\nimport Header from \"./components/Header/Header\";\nimport { ProfileApiInfo, ProfileModel } from \"./utils/models\";\nimport { Layout, Body, LoaderContainer } from \"./App.style\";\nimport ProfileList from \"./components/ProfileList/ProfileList\";\nimport { ProfileContext } from \"./contexts/ProfileContext\";\nimport useVisibility from \"./hooks/useVisibility\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { Spin } from \"antd\";\nimport ErrorFallback from \"components/ErrorFallback/ErrorFallback\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\nexport default function App(): JSX.Element {\n  const [profileList, setProfileList] = React.useState<ProfileModel[]>(\n    [] as ProfileModel[]\n  );\n  const [profileApiInfo, setProfileApiInfo] = React.useState<ProfileApiInfo>(\n    {} as ProfileApiInfo\n  );\n  const [loading, setLoading] = React.useState(false);\n  const [offset, setOffset] = React.useState(0);\n\n  const lastProfileCard = useVisibility(\n    (visible: boolean) => {\n      if (visible) {\n        setLoading(true);\n        fetch(`${profileApiInfo.next}`)\n          .then((response) => response.json())\n          .then((data) => {\n            const oldProfileList = [...profileList];\n            const newProfileList = oldProfileList.concat(data.results);\n            setProfileList(newProfileList);\n            setOffset(data.results ? offset + data.results.length : offset);\n            setProfileApiInfo(data.info);\n          })\n          .then(() => setLoading(false));\n      }\n    },\n    [profileList, offset]\n  );\n\n  React.useEffect(() => {\n    const getProfileList = () => {\n      setLoading(true);\n      fetch(`https://rickandmortyapi.com/api/character`)\n        .then((response) => response.json())\n        .then((data) => {\n          setProfileList(data.results);\n          setProfileApiInfo(data.info);\n          setOffset(data.results ? data.results.length : 0);\n        })\n        .then(() => setLoading(false));\n    };\n    getProfileList();\n  }, []);\n\n  return (\n    <ProfileContext.Provider value={profileList}>\n      <ErrorBoundary FallbackComponent={ErrorFallback}>\n        <Layout>\n          <Header />\n          <Body>\n            <ProfileList lastProfileCard={lastProfileCard} />\n          </Body>\n          <LoaderContainer>{loading && <Spin />}</LoaderContainer>\n        </Layout>\n      </ErrorBoundary>\n    </ProfileContext.Provider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}